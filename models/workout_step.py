import uuid

from sqlalchemy import *
from sqlalchemy.orm import Mapped, mapped_column

from models import Base

# Enum for status (future, in progress, completed)
import enum


class Status(enum.Enum):
    FUTURE = 'future'
    IN_PROGRESS = 'in_progress'
    COMPLETED = 'completed'

class WorkoutStep(Base):
    __tablename__ = 'workout_step'

    # Use an autogenerated uuid as primary key
    id: Mapped[uuid.UUID] = mapped_column(primary_key=True, default=uuid.uuid4)

    sequence_number: Mapped[int] = mapped_column(Integer, nullable=False)

    workout_session_id: Mapped[uuid.UUID] = mapped_column(ForeignKey("workout_session.id"), nullable=False)

    # One-to-one exercise relationship
    exercise_id: Mapped[int] = mapped_column(ForeignKey("exercise.id"), nullable=False)

    # One-to-one equipment relationship
    equipment_id: Mapped[str] = mapped_column(ForeignKey("equipment.id"), nullable=False)

    # Priority score that is an integer between 1 and 50
    priority_score: Mapped[int] = mapped_column(Integer, nullable=False)

    # Estimated time in minutes
    estimated_time: Mapped[int] = mapped_column(Integer, nullable=False)

    # Number of sets (1 to 4)
    sets: Mapped[int] = mapped_column(Integer, nullable=False)

    # Estimated start time in minutes since 6 PM
    est_start_time: Mapped[int] = mapped_column(Integer, nullable=False)
