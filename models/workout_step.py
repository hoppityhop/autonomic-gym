import uuid

from sqlalchemy import *
from sqlalchemy.orm import Mapped, mapped_column, relationship

from models import Base

# Enum for status (future, in progress, completed)
import enum

# from models.workout_session import WorkoutSession


class Status(enum.Enum):
    FUTURE = 'future'
    IN_PROGRESS = 'in_progress'
    COMPLETED = 'completed'


class WorkoutStep(Base):
    __tablename__ = 'workout_step'

    # Use an autogenerated int id as primary key
    id: Mapped[int] = mapped_column(primary_key=True)

    sequence_number: Mapped[int] = mapped_column(Integer, nullable=False)

    workout_session_id: Mapped[str] = mapped_column(ForeignKey(
        "workout_session.id", name="fk_workout_session_id"), nullable=True)
    workout_session: Mapped["WorkoutSession"] = relationship(
        "WorkoutSession",
        back_populates="steps",
        foreign_keys="[WorkoutStep.workout_session_id]")

    # One-to-one exercise relationship
    exercise_id: Mapped[int] = mapped_column(
        ForeignKey("exercise.id"), nullable=False)
    exercise: Mapped["Exercise"] = relationship(back_populates="workout_steps")

    # One-to-one equipment relationship
    equipment_id: Mapped[str] = mapped_column(
        ForeignKey("equipment.id"), nullable=False)
    equipment: Mapped["Equipment"] = relationship(
        back_populates="workout_steps")
    # Priority score that is an integer between 1 and 50
    priority_score: Mapped[int] = mapped_column(Integer, nullable=False)

    # Estimated time in minutes
    estimated_time: Mapped[int] = mapped_column(Integer, nullable=False)

    # Number of sets (1 to 4)
    sets: Mapped[int] = mapped_column(Integer, nullable=False)

    # Estimated start time in minutes since 6 PM
    est_start_time: Mapped[int] = mapped_column(Integer, nullable=False)

    est_end_time: Mapped[int] = mapped_column(Integer, nullable=False)
